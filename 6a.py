# -*- coding: utf-8 -*-
"""Program 6a.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cw38h_2Y2yhW1C0XqsAHSOkaZ5EZOWwS
"""

!pip install gradio cryptography

import gradio as gr
from cryptography.fernet import Fernet

# ---- Shared Encryption Key ----
key = Fernet.generate_key()
fernet = Fernet(key)

# ---- Server Storage (Encrypted only) ----
server_messages = []

# ---- Functions ----
def send_from_alice(message):
    if message.strip() == "":
        return render_chat()
    encrypted = fernet.encrypt(message.encode())
    server_messages.append(("Alice", encrypted))
    return render_chat()

def send_from_bob(message):
    if message.strip() == "":
        return render_chat()
    encrypted = fernet.encrypt(message.encode())
    server_messages.append(("Bob", encrypted))
    return render_chat()

def render_chat():
    html = ""
    for sender, enc in server_messages:
        decrypted = fernet.decrypt(enc).decode()
        if sender == "Alice":
            html += f"<div style='text-align:left; margin:8px;'><b>Alice:</b> {decrypted}</div>"
        else:
            html += f"<div style='text-align:right; margin:8px; color:purple;'><b>Bob:</b> {decrypted}</div>"
    return html

def wipe_conversation():
    server_messages.clear()
    return ""

# ---- Gradio Interface ----
with gr.Blocks(theme=gr.themes.Soft(primary_hue="purple")) as demo:
    gr.Markdown("<h2 style='color:purple;'>ðŸ’¬ Encrypted Chat Simulator</h2>")
    chat_box = gr.HTML(label="Conversation View")

    with gr.Row():
        with gr.Column():
            gr.Markdown("### PYâ€™s Input")
            alice_input = gr.Textbox(label="Type your message")
            send_alice_btn = gr.Button("Send from PY")
        with gr.Column():
            gr.Markdown("### VKâ€™s Input")
            bob_input = gr.Textbox(label="Type your message")
            send_bob_btn = gr.Button("Send from VK")

    reset_btn = gr.Button("ðŸ§¹ Reset Conversation")

    send_alice_btn.click(send_from_alice, inputs=alice_input, outputs=chat_box)
    send_bob_btn.click(send_from_bob, inputs=bob_input, outputs=chat_box)
    reset_btn.click(wipe_conversation, inputs=[], outputs=chat_box)

demo.launch()